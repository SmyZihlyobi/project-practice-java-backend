spring:
  graphql:
    graphiql:
      enabled: true

  application:
    name: project-practice-api
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB

  datasource:
    hikari:
      maximum-pool-size: 100
      minimum-idle: 25
      connection-timeout: 5000
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${POSTGRES_DB:project-practice-api}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: validate
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migrations

  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:localhost}

  mail:
    host: ${SMTP_SERVER}
    port: ${SMTP_PORT}
    username: ${SMTP_LOGIN}
    password: ${SMTP_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            trust: ${SMTP_SERVER}
          debug: true


  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 10
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      isolation-level: read_committed
      properties:
        spring.json.trusted.packages: "xyz.demorgan.projectpractice.store.dto"
    listener:
      ack-mode: MANUAL_IMMEDIATE

smtp:
  email: ${SMTP_EMAIL}

server:
  port: 8080
  tomcat:
    uri-encoding: utf-8

minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  root-user: ${MINIO_ROOT_USER:demorgan}
  root-password: ${MINIO_ROOT_PASSWORD:password}

springdoc:
  swagger-ui:
    path: /docs
  api-docs:
    enabled: true
    path: /v3/api-docs

company:
  default:
    email: ${COMPANY_DEFAULT_EMAIL:demo@docker.ru}
    password: ${COMPANY_DEFAULT_PASSWORD:eBxYWr/PlJ8fB%Z:'vCt__[[S#{O|'}

logging:
  level:
    root: info
    org.hibernate.SQL: warn
    org.hibernate.type: warn
    xyz.demorgan.projectpractice.security: info
    org.springframework.web: info
    org.apache.kafka: info
    xyz.demorgan.projectpractice: info

  file:
    name: /home/spring-user/logs/project-practice.log

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId:-}] [%thread] %-5level %logger{36} - %msg%n"

recaptcha:
  secret:
    key: ${RECAPTCHA_SECRET_KEY}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
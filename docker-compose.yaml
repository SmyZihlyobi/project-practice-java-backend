services:
  project-practice:
    image: project-practice:latest
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - "8080:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:17.3
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_secret
      POSTGRES_DB: mydb
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: 7fcc12fdc2d1
      MINIO_ROOT_PASSWORD: 96a19220ee73
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    depends_on:
      - postgres

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

volumes:
  postgres_data:
  minio_data:
  pgadmin_data: